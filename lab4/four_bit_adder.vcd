$date
	Mon Aug 18 15:01:53 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module four_bit_adder_tb $end
$var wire 1 ! s3 $end
$var wire 1 " s2 $end
$var wire 1 # s1 $end
$var wire 1 $ s0 $end
$var wire 1 % carry_out $end
$var reg 1 & carry_in $end
$var reg 1 ' x0 $end
$var reg 1 ( x1 $end
$var reg 1 ) x2 $end
$var reg 1 * x3 $end
$var reg 1 + y0 $end
$var reg 1 , y1 $end
$var reg 1 - y2 $end
$var reg 1 . y3 $end
$scope module four_bit_adder_instance $end
$var wire 1 & carry_in $end
$var wire 1 ' x0 $end
$var wire 1 ( x1 $end
$var wire 1 ) x2 $end
$var wire 1 * x3 $end
$var wire 1 + y0 $end
$var wire 1 , y1 $end
$var wire 1 - y2 $end
$var wire 1 . y3 $end
$var wire 1 ! s3 $end
$var wire 1 " s2 $end
$var wire 1 # s1 $end
$var wire 1 $ s0 $end
$var wire 1 % carry_out $end
$var wire 1 / c3 $end
$var wire 1 0 c2 $end
$var wire 1 1 c1 $end
$scope module stage0 $end
$var wire 1 & cin $end
$var wire 1 1 cout $end
$var wire 1 $ sum $end
$var wire 1 ' x $end
$var wire 1 + y $end
$upscope $end
$scope module stage1 $end
$var wire 1 1 cin $end
$var wire 1 0 cout $end
$var wire 1 # sum $end
$var wire 1 ( x $end
$var wire 1 , y $end
$upscope $end
$scope module stage2 $end
$var wire 1 0 cin $end
$var wire 1 / cout $end
$var wire 1 " sum $end
$var wire 1 ) x $end
$var wire 1 - y $end
$upscope $end
$scope module stage3 $end
$var wire 1 / cin $end
$var wire 1 % cout $end
$var wire 1 ! sum $end
$var wire 1 * x $end
$var wire 1 . y $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
11
10
1/
1.
1-
0,
1+
1*
0)
1(
1'
0&
1%
0$
0#
0"
1!
$end
#20
0%
0/
1"
00
1#
01
1!
1$
0-
0+
0*
1)
#40
